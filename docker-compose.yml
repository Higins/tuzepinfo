services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tuzepinfo-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - tuzepinfo
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"

  nginx:
    image: nginx:alpine
    container_name: tuzepinfo-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - tuzepinfo

  db:
    image: postgres:15-alpine
    container_name: tuzepinfo-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tuzepinfo

  redis:
    image: redis:alpine
    container_name: tuzepinfo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tuzepinfo

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: tuzepinfo-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - tuzepinfo

  prometheus:
    image: prom/prometheus:latest
    container_name: tuzepinfo-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - tuzepinfo

  node-exporter:
    image: prom/node-exporter:latest
    container_name: tuzepinfo-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - tuzepinfo

  grafana:
    image: grafana/grafana:latest
    container_name: tuzepinfo-grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - tuzepinfo

networks:
  tuzepinfo:
    driver: bridge

volumes:
  dbdata:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
